// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: customer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "customer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Customer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Customer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_customer_2eproto() {
  protobuf_AddDesc_customer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "customer.proto");
  GOOGLE_CHECK(file != NULL);
  Customer_descriptor_ = file->message_type(0);
  static const int Customer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Customer, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Customer, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Customer, first_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Customer, last_name_),
  };
  Customer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Customer_descriptor_,
      Customer::default_instance_,
      Customer_offsets_,
      -1,
      -1,
      -1,
      sizeof(Customer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Customer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Customer, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_customer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Customer_descriptor_, &Customer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_customer_2eproto() {
  delete Customer::default_instance_;
  delete Customer_reflection_;
}

void protobuf_AddDesc_customer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016customer.proto\"O\n\010Customer\022\n\n\002id\030\001 \001(\005"
    "\022\020\n\010username\030\002 \001(\t\022\022\n\nfirst_name\030\003 \001(\t\022\021"
    "\n\tlast_name\030\004 \001(\tB\002H\001b\006proto3", 109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "customer.proto", &protobuf_RegisterTypes);
  Customer::default_instance_ = new Customer();
  Customer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_customer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_customer_2eproto {
  StaticDescriptorInitializer_customer_2eproto() {
    protobuf_AddDesc_customer_2eproto();
  }
} static_descriptor_initializer_customer_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Customer::kIdFieldNumber;
const int Customer::kUsernameFieldNumber;
const int Customer::kFirstNameFieldNumber;
const int Customer::kLastNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Customer::Customer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Customer)
}

void Customer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Customer::Customer(const Customer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Customer)
}

void Customer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Customer::~Customer() {
  // @@protoc_insertion_point(destructor:Customer)
  SharedDtor();
}

void Customer::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Customer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Customer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Customer_descriptor_;
}

const Customer& Customer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_customer_2eproto();
  return *default_instance_;
}

Customer* Customer::default_instance_ = NULL;

Customer* Customer::New(::google::protobuf::Arena* arena) const {
  Customer* n = new Customer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Customer::Clear() {
// @@protoc_insertion_point(message_clear_start:Customer)
  id_ = 0;
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Customer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Customer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // optional string username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Customer.username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_first_name;
        break;
      }

      // optional string first_name = 3;
      case 3: {
        if (tag == 26) {
         parse_first_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_name().data(), this->first_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Customer.first_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_last_name;
        break;
      }

      // optional string last_name = 4;
      case 4: {
        if (tag == 34) {
         parse_last_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_name().data(), this->last_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Customer.last_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Customer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Customer)
  return false;
#undef DO_
}

void Customer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Customer)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Customer.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string first_name = 3;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Customer.first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->first_name(), output);
  }

  // optional string last_name = 4;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Customer.last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->last_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:Customer)
}

::google::protobuf::uint8* Customer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Customer)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Customer.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional string first_name = 3;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Customer.first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->first_name(), target);
  }

  // optional string last_name = 4;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Customer.last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->last_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Customer)
  return target;
}

int Customer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Customer)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string first_name = 3;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_name());
  }

  // optional string last_name = 4;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Customer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Customer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Customer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Customer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Customer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Customer)
    MergeFrom(*source);
  }
}

void Customer::MergeFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Customer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.first_name().size() > 0) {

    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  if (from.last_name().size() > 0) {

    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
}

void Customer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Customer::CopyFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Customer::IsInitialized() const {

  return true;
}

void Customer::Swap(Customer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Customer::InternalSwap(Customer* other) {
  std::swap(id_, other->id_);
  username_.Swap(&other->username_);
  first_name_.Swap(&other->first_name_);
  last_name_.Swap(&other->last_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Customer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Customer_descriptor_;
  metadata.reflection = Customer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Customer

// optional int32 id = 1;
void Customer::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Customer::id() const {
  // @@protoc_insertion_point(field_get:Customer.id)
  return id_;
}
 void Customer::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Customer.id)
}

// optional string username = 2;
void Customer::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Customer::username() const {
  // @@protoc_insertion_point(field_get:Customer.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Customer::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Customer.username)
}
 void Customer::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Customer.username)
}
 void Customer::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Customer.username)
}
 ::std::string* Customer::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Customer.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Customer::release_username() {
  // @@protoc_insertion_point(field_release:Customer.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Customer::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Customer.username)
}

// optional string first_name = 3;
void Customer::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Customer::first_name() const {
  // @@protoc_insertion_point(field_get:Customer.first_name)
  return first_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Customer::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Customer.first_name)
}
 void Customer::set_first_name(const char* value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Customer.first_name)
}
 void Customer::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Customer.first_name)
}
 ::std::string* Customer::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:Customer.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Customer::release_first_name() {
  // @@protoc_insertion_point(field_release:Customer.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Customer::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:Customer.first_name)
}

// optional string last_name = 4;
void Customer::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Customer::last_name() const {
  // @@protoc_insertion_point(field_get:Customer.last_name)
  return last_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Customer::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Customer.last_name)
}
 void Customer::set_last_name(const char* value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Customer.last_name)
}
 void Customer::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Customer.last_name)
}
 ::std::string* Customer::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:Customer.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Customer::release_last_name() {
  // @@protoc_insertion_point(field_release:Customer.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Customer::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:Customer.last_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
